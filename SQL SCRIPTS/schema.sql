-- Create REGION Table with constraints
CREATE TABLE REGION (
    R_REGIONKEY INTEGER NOT NULL PRIMARY KEY,
    R_NAME VARCHAR(25) NOT NULL,
    R_COMMENT VARCHAR(152),
    CONSTRAINT check_pk_region CHECK (R_REGIONKEY >= 0)
);

-- Create NATION Table with constraints
CREATE TABLE NATION (
    N_NATIONKEY INTEGER NOT NULL PRIMARY KEY,
    N_NAME VARCHAR(25) NOT NULL,
    N_REGIONKEY INTEGER NOT NULL,
    N_COMMENT VARCHAR(152),
    FOREIGN KEY (N_REGIONKEY) REFERENCES REGION(R_REGIONKEY),
    CONSTRAINT check_pk_nation CHECK (N_NATIONKEY >= 0)
);


-- Create PART Table with constraints
CREATE TABLE PART (
    P_PARTKEY INTEGER NOT NULL PRIMARY KEY,
    P_NAME VARCHAR(55),
    P_MFGR CHAR(25),
    P_BRAND CHAR(10),
    P_TYPE VARCHAR(25),
    P_SIZE INTEGER NOT NULL CHECK (P_SIZE >= 0),
    P_CONTAINER CHAR(10),
    P_RETAILPRICE DECIMAL NOT NULL CHECK (P_RETAILPRICE >= 0),
    P_COMMENT VARCHAR(23),
    CONSTRAINT check_pk_part CHECK (P_PARTKEY >= 0)
);


-- Create SUPPLIER Table with constraints
CREATE TABLE SUPPLIER (
    S_SUPPKEY INTEGER NOT NULL PRIMARY KEY,
    S_NAME CHAR(25),
    S_ADDRESS VARCHAR(40),
    S_NATIONKEY INTEGER NOT NULL,
    S_PHONE CHAR(15),
    S_ACCTBAL DECIMAL,
    S_COMMENT VARCHAR(101),
    FOREIGN KEY (S_NATIONKEY) REFERENCES NATION(N_NATIONKEY),
    CONSTRAINT check_pk_supplier CHECK (  S_SUPPKEY >= 0)

);

-- Create PARTSUPP Table with constraints
CREATE TABLE PARTSUPP (
    PS_PARTKEY INTEGER NOT NULL,
    PS_SUPPKEY INTEGER NOT NULL,
    PS_AVAILQTY INTEGER NOT NULL CHECK (PS_AVAILQTY >= 0),
    PS_SUPPLYCOST DECIMAL NOT NULL CHECK (PS_SUPPLYCOST >= 0),
    PS_COMMENT VARCHAR(199),
    PRIMARY KEY (PS_PARTKEY, PS_SUPPKEY),
    FOREIGN KEY (PS_PARTKEY) REFERENCES PART(P_PARTKEY),
    FOREIGN KEY (PS_SUPPKEY) REFERENCES SUPPLIER(S_SUPPKEY),
    CONSTRAINT check_pk_ps_partkey CHECK (PS_PARTKEY >= 0),
    CONSTRAINT check_pk_ps_suppkey CHECK (PS_SUPPKEY >= 0)
);


-- Create CUSTOMER Table with constraints
CREATE TABLE CUSTOMER (
    C_CUSTKEY INTEGER NOT NULL PRIMARY KEY,
    C_NAME VARCHAR(25),
    C_ADDRESS VARCHAR(40),
    C_NATIONKEY INTEGER NOT NULL,
    C_PHONE CHAR(15),
    C_ACCTBAL DECIMAL,
    C_MKTSEGMENT CHAR(10),
    C_COMMENT VARCHAR(117),
    FOREIGN KEY (C_NATIONKEY) REFERENCES NATION(N_NATIONKEY),
    CONSTRAINT check_positive_custkey CHECK (C_CUSTKEY >= 0)  -- Ensures C_CUSTKEY is non-negative
);

-- Create ORDERS Table with constraints
-- Create ORDERS Table with constraints
CREATE TABLE ORDERS (
    O_ORDERKEY INTEGER NOT NULL PRIMARY KEY,
    O_CUSTKEY INTEGER NOT NULL,
    O_ORDERSTATUS CHAR(1),
    O_TOTALPRICE DECIMAL NOT NULL CHECK (O_TOTALPRICE >= 0),
    O_ORDERDATE DATE,
    O_ORDERPRIORITY CHAR(15),
    O_CLERK CHAR(15),
    O_SHIPPRIORITY INTEGER,
    O_COMMENT VARCHAR(79),
    FOREIGN KEY (O_CUSTKEY) REFERENCES CUSTOMER(C_CUSTKEY),
    CONSTRAINT check_positive_orderkey CHECK (O_ORDERKEY >= 0) 
);


-- Create LINEITEM Table with revised constraints and composite primary key
CREATE TABLE LINEITEM (
    L_ORDERKEY INTEGER NOT NULL,
    L_PARTKEY INTEGER NOT NULL,
    L_SUPPKEY INTEGER NOT NULL,
    L_LINENUMBER INTEGER NOT NULL,
    L_QUANTITY DECIMAL NOT NULL CHECK (L_QUANTITY >= 0),
    L_EXTENDEDPRICE DECIMAL NOT NULL CHECK (L_EXTENDEDPRICE >= 0),
    L_DISCOUNT DECIMAL NOT NULL CHECK (L_DISCOUNT BETWEEN 0 AND 1),
    L_TAX DECIMAL NOT NULL CHECK (L_TAX >= 0),
    L_RETURNFLAG CHAR(1),
    L_LINESTATUS CHAR(1),
    L_SHIPDATE DATE,
    L_COMMITDATE DATE,
    L_RECEIPTDATE DATE CHECK (L_SHIPDATE <= L_RECEIPTDATE),
    L_SHIPINSTRUCT CHAR(25),
    L_SHIPMODE CHAR(10),
    L_COMMENT VARCHAR(44),
    FOREIGN KEY (L_ORDERKEY) REFERENCES ORDERS(O_ORDERKEY),
    FOREIGN KEY (L_PARTKEY, L_SUPPKEY) REFERENCES PARTSUPP(PS_PARTKEY, PS_SUPPKEY),
    PRIMARY KEY (L_ORDERKEY, L_LINENUMBER)  -- Composite primary key
);

